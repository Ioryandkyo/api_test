{"name": "组添加SIM Card", "status": "broken", "statusDetails": {"message": "AttributeError: type object 'Parameterize' has no attribute 'sim_card_group_id'", "trace": "self = <test_group.TestEditGroupSIM object at 0x000002257D8B0788>\ncase = <scripts.handle_excel.CaseData object at 0x000002257D4CFC08>\ninit_test_sim_group = <scripts.handle_request.HandleRequest object at 0x000002256D798F08>\n\n    @pytest.mark.parametrize('case', edit_group_sim_cases)\n    def test_edit_group_sim(self, case, init_test_sim_group):\n        allure.dynamic.title(case.title)\n        # 请求接口\n>       res = init_test_sim_group.request_interface(case.url, case.method, case.data)\n\ncases\\tmx_connect\\test_group.py:109: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nscripts\\handle_request.py:67: in request_interface\n    new_data = Parameterize.to_param(data)\nscripts\\handle_parameterize.py:68: in to_param\n    data = cls.sim_group_replace(data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'scripts.handle_parameterize.Parameterize'>\ndata = '{\"simcardIds\":[\"{first_sim_id}\"],\"id\":\"{sim_group_id}\"}'\n\n    @classmethod\n    def sim_group_replace(cls, data):\n        # 数据为空不做处理\n        if data is None:\n            pass\n    \n        # SIM Card Group Id正则匹配\n        elif re.search(cls.sim_group_id_pattern, data):\n>           sim_card_group_id = getattr(cls, 'sim_card_group_id')\nE           AttributeError: type object 'Parameterize' has no attribute 'sim_card_group_id'\n\nscripts\\handle_parameterize.py:38: AttributeError"}, "parameters": [{"name": "case", "value": "<scripts.handle_excel.CaseData object at 0x000002257D4CFC08>"}], "start": 1671094047255, "stop": 1671094047255, "uuid": "e84e0bba-ac71-41cc-9462-1c68abd56420", "historyId": "fa23908651f7d80aa4b010209c81a758", "testCaseId": "80b1265291fb1ae11a4cc4dfea940ca9", "fullName": "cases.tmx_connect.test_group.TestEditGroupSIM#test_edit_group_sim", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_test_sim_group')"}, {"name": "parentSuite", "value": "cases.tmx_connect"}, {"name": "suite", "value": "test_group"}, {"name": "subSuite", "value": "TestEditGroupSIM"}, {"name": "host", "value": "GHT-20200526SHH"}, {"name": "thread", "value": "4948-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "cases.tmx_connect.test_group"}]}